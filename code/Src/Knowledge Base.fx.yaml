"'Knowledge Base' As screen":
    Fill: =ColorScheme.screenBackground
    OnHidden: |-
        =UpdateContext({SearchVisible:false, SearchText:"", ResetScreen:false})
    OnVisible: |-
        =ClearCollect(KBTagcol,Distinct('KB Tags',Name));
        ClearCollect(Articles,KBArticles);
        ClearCollect(SearchResults,Blank());
        Set(SearchVisible,false);
        Set(ResetScreen,false);
        Set(SearchText,"");

    KnowledgeBaseContainer As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingTop: =compWebHeader_14.Height+KBScreenTitle.Height
        Width: =Parent.Width
        ZIndex: =1

        KnowledgeBaseSearchContainer As groupContainer.manualLayoutContainer:
            Fill: =ColorScheme.secondaryPressedColor
            FillPortions: =
            Height: =Parent.Height/5//150
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Visible: =!ResetScreen
            ZIndex: =3

            SearchKBBar As text:
                Default: =""
                Height: =If('Knowledge Base'.Size=1,24,40)
                HintText: ="Type in Keywords, or titles"
                OnChange: |-
                    =If(IsBlank(Trim(SearchKBBar.Text)), UpdateContext({SearchVisible:true,SearchText:"",ResetScreen:true}); Reset(SearchKBBar);ClearCollect(SearchResults,Blank());, 
                    
                        UpdateContext({SearchVisible:true});
                        ClearCollect(SearchResults,Filter(Articles,SearchKBBar.Text in Tags || SearchKBBar.Text in Name || SearchKBBar.Text in ArticleBlurb));
                        UpdateContext({SearchText:SearchKBBar.Text});
                        Reset(SearchKBBar);
                        UpdateContext({ResetScreen:true});
                    )
                PaddingRight: =SendIcon.Width+5
                RadiusBottomRight: =20
                RadiusTopRight: =20
                Width: =Parent.Width*.80
                X: =(Parent.Width-Self.Width)/2
                Y: =Parent.Height/2
                ZIndex: =1

            SendUnderneathButton As button:
                DisplayMode: =DisplayMode.View
                Fill: =ColorScheme.primary
                Height: =SearchKBBar.Height
                RadiusBottomLeft: =5
                RadiusBottomRight: =20
                RadiusTopLeft: =5
                RadiusTopRight: =20
                Text: =""
                Width: =50
                X: =SearchKBBar.Width+SearchKBBar.X-Self.Width
                Y: =SearchKBBar.Y
                ZIndex: =2

            SendIcon As icon.Send:
                Color: =ColorScheme.secondary
                Fill: =Color.Transparent
                Height: =SearchKBBar.Height
                Icon: =Icon.Send
                Width: =50
                X: =SendUnderneathButton.X
                Y: =SearchKBBar.Y
                ZIndex: =3

            SearchBarText As label:
                Align: =Align.Center
                DisplayMode: =DisplayMode.View
                Height: =If('Knowledge Base'.Size=1,20,43)
                Size: =If('Knowledge Base'.Size=1,14,24)
                Text: ="How can we help?"
                Width: =SearchKBBar.Width
                X: =SearchKBBar.X
                Y: =Parent.Height/8
                ZIndex: =4

            SearchOverlapButton As button:
                Fill: =Color.Transparent
                Height: =SearchKBBar.Height
                HoverFill: =ColorFade(RGBA(56, 96, 178, .25), -20%)
                OnSelect: |-
                    =If(IsBlank(Trim(SearchKBBar.Text)), UpdateContext({SearchVisible:true,SearchText:"",ResetScreen:true}); Reset(SearchKBBar);ClearCollect(SearchResults,Blank());, 
                    
                        UpdateContext({SearchVisible:true});
                        ClearCollect(SearchResults,Filter(Articles,SearchKBBar.Text in Tags || SearchKBBar.Text in Name || SearchKBBar.Text in ArticleBlurb));
                        UpdateContext({SearchText:SearchKBBar.Text});
                        Reset(SearchKBBar);
                        UpdateContext({ResetScreen:true});
                    )
                PressedFill: =ColorScheme.secondaryPressedColor
                RadiusBottomLeft: =5
                RadiusBottomRight: =20
                RadiusTopLeft: =5
                RadiusTopRight: =20
                Text: =""
                Width: =50
                X: =SearchKBBar.Width+SearchKBBar.X-Self.Width
                Y: =SearchKBBar.Y
                ZIndex: =5

            ManualResetButton As button:
                Fill: =RGBA(0, 18, 107, 1)
                Height: =27
                OnSelect: |-
                    =UpdateContext({SearchVisible:false, SearchText:""});
                    Reset(SearchKBBar);
                Text: ="Reset"
                Visible: =false
                X: =21
                Y: =12
                ZIndex: =6

        KnowledgeBaseResultsContainer As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.Start
            FillPortions: =0
            Height: |-
                =//If(Rectangle4.Height+100 <768,Rectangle4.Height+100,768)
                If(StartsWith(ResultsFoundText,"We"),100,If(GalleryBox.Height+100 <768,GalleryBox.Height+100,768))
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Visible: |
                =SearchVisible && !ResetScreen
            Width: =Parent.Width
            ZIndex: =4

            GalleryBox As rectangle:
                BorderColor: =RGBA(0, 0, 0, 1)
                BorderThickness: =2
                Fill: =RGBA(0, 0, 0, 0)
                Height: |-
                    =//Parent.Height*.85
                    CountRows(SearchResults)*ArticlesGallery.TemplateHeight+If(CountRows(SearchResults)=0,0,10)
                Width: =Parent.Width*.90
                X: =(Parent.Width-Self.Width)/2
                Y: =Parent.Height/(4*CountRows(SearchResults))
                ZIndex: =1

            ArticlesGallery As gallery.galleryVertical:
                Height: =GalleryBox.Height
                Items: =SearchResults
                Layout: =Layout.Vertical
                TemplateSize: =150
                Visible: =If(Self.Height=0,false,true)
                Width: =GalleryBox.Width+5
                X: =GalleryBox.X-5
                Y: =GalleryBox.Y
                ZIndex: =4

                ArticleIcon As icon.DocumentwithContent:
                    DisplayMode: =DisplayMode.View
                    Icon: =Icon.DocumentWithContent
                    OnSelect: =Select(Parent)
                    Visible: =If('Knowledge Base'.Size>1, true, false)
                    Y: =
                    ZIndex: =1

                ArticleTags As label:
                    Height: =20
                    OnSelect: =Select(Parent)
                    Size: =If('Knowledge Base'.Size>1, 13, 8)
                    Text: =ThisItem.Tags
                    Width: =Parent.TemplateWidth-Self.X
                    X: =ArticleName.X
                    Y: =ArticleDescription.Y+ArticleDescription.Height
                    ZIndex: =2

                ArticleDescription As label:
                    Height: =60
                    OnSelect: =Select(Parent)
                    Size: =If('Knowledge Base'.Size>1, 13, 8)
                    Text: =ThisItem.ArticleBlurb
                    Width: =Parent.TemplateWidth-Self.X
                    X: =ArticleName.X
                    Y: =ArticleName.Height
                    ZIndex: =3

                ArticleName As label:
                    Color: =RGBA(102, 182, 227, 1)
                    FontWeight: =FontWeight.Semibold
                    OnSelect: =Select(Parent)
                    Size: =If('Knowledge Base'.Size>1,21, 12)
                    Text: =ThisItem.Name
                    Underline: =true
                    Width: =Parent.TemplateWidth-Self.X
                    X: =If(ArticleIcon.Visible,ArticleIcon.X+ArticleIcon.Width+5,0)
                    Y: =
                    ZIndex: =4

                SeparatorRectangle As rectangle:
                    Fill: =ColorScheme.primary
                    Height: =3
                    OnSelect: =Select(Parent)
                    Width: =GalleryBox.Width+10
                    Y: =Parent.TemplateHeight
                    ZIndex: =5

                LaunchItemButton As button:
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Parent.TemplateHeight
                    HoverFill: =RGBA(214, 223, 238, .35)
                    OnSelect: =Launch(ThisItem.'Link to item');
                    PressedFill: =ColorFade(ColorScheme.secondaryPressedColor,79%)
                    Text: =""
                    Width: =Parent.TemplateWidth
                    ZIndex: =6

            ResultsFoundText As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Semibold
                Height: =60
                Size: =If('Knowledge Base'.Size>1, 20, 13)
                Text: |-
                    =If(IsEmpty(ArticlesGallery.AllItems),Concatenate("We couldn't find anything for '",SearchText,"'"),Concatenate("Found ",Text(CountRows(SearchResults)) ,
                    If(CountRows(SearchResults)>=2," Results"," Result")," for '",SearchText,"'"))
                Visible: =SearchVisible
                Width: =GalleryBox.Width
                X: =GalleryBox.X
                Y: =If(ArticlesGallery.Visible,GalleryBox.Y -Self.Height,0)
                ZIndex: =5

        TagGallery As gallery.galleryVertical:
            AlignInContainer: =AlignInContainer.Center
            FillPortions: =0
            Height: =Parent.Height/1.59
            Items: =KBTagcol
            Layout: =Layout.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =320
            TemplateSize: =If('Knowledge Base'.Size>1,200, 100)
            Visible: =!ResetScreen
            Width: =Parent.Width
            WrapCount: =Switch('Knowledge Base'.Size, ScreenSize.Small, 2, ScreenSize.Medium, 2, ScreenSize.Large, 3, 3)
            ZIndex: =6

            HtmlText1_3 As htmlViewer:
                DisplayMode: =DisplayMode.View
                Height: =200
                HtmlText: |-
                    ="<div style='box-shadow: 23px 21px 33px 5px rgba(0,0,0,0.05);
                    -webkit-box-shadow: 23px 21px 33px 5px rgba(0,0,0,0.05);
                    -moz-box-shadow: 23px 21px 33px 5px rgba(0,0,0,0.05); height:"&ButtonGalleryBackgroundButton_2.Height-11&"px; width:"&ButtonGalleryBackgroundButton_2.Width-11&"px; border-style:none; border-radius:10px'></div>"
                OnSelect: =Select(Parent)
                Width: =335.25
                X: =ButtonGalleryBackgroundButton_2.X
                ZIndex: =1

            ButtonGalleryBackgroundButton_2 As button:
                BorderStyle: =BorderStyle.Dashed
                BorderThickness: =0
                Color: =ColorScheme.secondary
                Fill: =ColorScheme.secondary
                Height: =Parent.TemplateHeight*.90
                OnSelect: =Select(Parent)
                Text: =""
                Width: =Parent.TemplateWidth *.80
                X: =(Parent.TemplateWidth - Self.Width)/2
                Y: =(Parent.TemplateHeight - Self.Height)/2
                ZIndex: =2

            TagLabel As label:
                Align: =Align.Center
                Color: =ColorScheme.primary
                FontWeight: =FontWeight.Semibold
                OnSelect: =Select(Parent)
                Size: =If('Knowledge Base'.Size=1, 11,15)
                Text: =ThisItem.Value
                X: =(Parent.TemplateWidth-Self.Width)/2
                Y: =(Parent.TemplateHeight-Self.Height)/2
                ZIndex: =3

            Overlapbtn_4 As button:
                Fill: =RGBA(255, 255, 255, 0)
                Height: =ButtonGalleryBackgroundButton_2.Height
                HoverFill: =ColorFade(RGBA(105,105,105,.35),-10%)
                OnSelect: |-
                    =ClearCollect(SearchResults, Filter(Articles, ThisItem.Value in Tags));
                    UpdateContext({SearchVisible:false, ResetScreen:true});
                    UpdateContext({SearchText:ThisItem.Value});
                    Reset(SearchKBBar);
                    UpdateContext({SearchVisible:true})
                PressedFill: =ColorFade(RGBA(105,105,105,.7),-50%)
                Text: =""
                Width: =ButtonGalleryBackgroundButton_2.Width
                X: =ButtonGalleryBackgroundButton_2.X
                Y: =ButtonGalleryBackgroundButton_2.Y
                ZIndex: =5

        KnowledgeBaseFooterContainer As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =75
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Visible: ='Knowledge Base'.Size=1
            ZIndex: =7

    StickyScreenElements As group:
        Height: =5
        Width: =5
        X: =60
        Y: =60
        ZIndex: =10

        compMobileMenu_21 As compMobileMenu:
            Height: =Parent.Height/8
            Visible: ='Knowledge Base'.Size=1
            Width: =Parent.Width
            Y: =Parent.Height-Self.Height
            ZIndex: =2

        KBScreenTitle As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =ColorScheme.primary
            Height: |-
                =48
                //If('Knowledge Base'.Size=1,35,70)
            Size: =If('Knowledge Base'.Size=1, titleText.mobileSize, titleText.desktopSize)
            Text: ="Knowledge Base"
            Width: =Parent.Width
            Y: =compWebHeader_14.Height
            ZIndex: =3

        NormalViewBackButton As icon.BackArrow:
            Color: =ColorScheme.secondary
            Height: |
                =TagName_2.Height/1.05
            Icon: =Icon.BackArrow
            OnSelect: =Back(ScreenTransition.Fade)
            Visible: ='Knowledge Base'.Size>1
            Width: =49
            X: =Self.Width/5 
            Y: =(KBScreenTitle.Height-KBScreenTitle.Height)
            ZIndex: =4

        compWebHeader_14 As compWebHeader:
            CompScreenSize: ='Knowledge Base'.Size
            Height: |-
                =82
                //70
            ZIndex: =5

        MobileBackButton As icon.BackArrow:
            Color: =ColorScheme.secondary
            Height: =KBScreenTitle.Height/1.05
            Icon: =Icon.BackArrow
            OnSelect: =Navigate(Home, ScreenTransition.Fade)//Back(ScreenTransition.Fade)
            Visible: |-
                =//'Knowledge Base'.Size=1
                true
            Width: =49
            X: =Self.Width/5
            Y: =compWebHeader_14.Height/1.05
            ZIndex: =7

        SearchEffectTimer As timer:
            Duration: =999
            OnTimerEnd: |-
                =UpdateContext({ResetScreen:false});
            Start: =ResetScreen
            Visible: =false
            X: =70
            Y: =40
            ZIndex: =8

        compWebMenu_14 As compWebMenu:
            Visible: ='Knowledge Base'.Size > 1
            ZIndex: =9

